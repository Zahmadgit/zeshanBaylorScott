name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DEPLOY_MOBILE: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run linting
      run: npm run lint

    - name: Build web
      run: |
        npx expo export --platform web
        npx eas deploy --alias zeshanBaylorScott

    - name: Build native
      run: npx expo prebuild --clean
      if: ${{ env.DEPLOY_MOBILE == 'true' }}

    - name: Build Android
      run: |
        cd android
        ./gradlew assembleRelease
      if: ${{ env.DEPLOY_MOBILE == 'true' }}
      env:
        JAVA_HOME: ${{ runner.java.home }}

    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace zeshanbaylorscott.xcworkspace -scheme zeshanbaylorscott -sdk iphonesimulator
      if: ${{ env.DEPLOY_MOBILE == 'true' }}
      env:
        DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Expo
      run: |
        npx eas update --platform all
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      if: ${{ env.DEPLOY_MOBILE == 'true' }}

